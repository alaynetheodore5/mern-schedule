{"version":3,"sources":["Components/Display.jsx","Components/ScheduleForm.jsx","Components/EditSchedule.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","activities","setActivities","all","setAll","showPast","setShowPast","fetchActivities","axios","get","then","res","console","log","data","filter","a","Date","start","catch","err","useEffect","toggle","e","className","map","act","i","key","_id","activity","description","moment","format","duration","units","to","onClick","delete","ScheduleForm","setActivity","setDescription","setStart","setDuration","setUnits","errors","setErrors","onSubmit","preventDefault","scheduleItem","post","navigate","type","onChange","target","value","properties","message","EditSchedule","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2f2d715a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport moment from 'moment';\n\nconst Display = props => {\n    \n    const [activities, setActivities] = useState([]);\n    const [all, setAll] = useState([]);\n    const [showPast, setShowPast] = useState(false);\n\n    const fetchActivities = () => {\n        axios.get(\"http://localhost:8000/api/schedule\")\n            .then(res => {\n                console.log(res);\n                setAll(res.data);\n                // setActivities(res.data);\n                // this will filter out past activities\n                setActivities(res.data.filter(a => new Date(a.start) > new Date()));\n            })\n            .catch(err => console.log(err));\n    }\n\n    useEffect( () => {\n        fetchActivities();\n    }, []);\n\n    const remove = _id => {\n        // console.log(_id);\n        axios.delete(`http://localhost:8000/api/schedule/${_id}`)\n        .then(res => {\n            console.log(res);\n            fetchActivities();\n        })\n        .catch(err => console.log(err));\n    }\n\n    const toggle = e => {\n        if(showPast) {\n            setActivities(all.filter(a => new Date(a.start) > new Date()));\n        } else {\n            setActivities(all);\n        }\n        setShowPast(!showPast);\n    }\n\n    return (\n        <div>\n            <div className=\"all_activities\">\n                {/* {activities.map( (act, i) =>\n                    <div className=\"an_activity card mb-3\" key={act._id}>\n                        <div className=\"activity_title card-header\">{act.activity}</div>\n                        <div className=\"card-body\">\n                            <p>{act.description}</p>\n                            <p>{moment(act.start).format('MMMM Do YYYY, h:mm:ss a')}</p>\n                            <p>Duration: {act.duration} {act.units}</p>\n                            <Link className=\"btn btn-outline-info\" to={`/edit/${act._id}`} >Edit</Link>\n                            <button className=\"btn btn-outline-danger float-right\" onClick={e => remove(act._id)}>Remove</button>\n                        </div>\n                    </div>\n                )} */}\n                {activities.map( (act, i) =>\n                    <div className=\"an_activity p-2\" key={act._id}>\n                        <div className=\"activity_title\">{act.activity}</div>\n                        <div className=\"body\">\n                            <p className=\"pt-3 pb-3\">{act.description}</p>\n                            <p>{moment(act.start).format('MMMM Do YYYY, h:mm:ss a')}</p>\n                            <p>Duration: {act.duration} {act.units}</p>\n                            <Link className=\"btn btn-outline-info btn-sm \" to={`/edit/${act._id}`} >Edit</Link>\n                            <button className=\"btn btn-outline-danger btn-sm float-right\" onClick={e => remove(act._id)}>Remove</button>\n                        </div>\n                    </div>\n                )}\n            </div>\n                { showPast ? <button className=\"btn btn-outline-info btn-sm mb-3\" onClick={toggle} >Hide Past Activities</button> :\n                <button className=\"btn btn-outline-info btn-sm mb-3\" onClick={toggle} >Show Past Activities</button> }\n        </div>\n    )\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst ScheduleForm = props => {\n    const [activity, setActivity] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [start, setStart] = useState(\"\");\n    const [duration, setDuration] = useState(0);\n    const [units, setUnits] = useState(\"minutes\");\n    const [errors, setErrors] = useState({});\n\n    const CreateSchedule = e => {\n        e.preventDefault();\n        const scheduleItem = {activity, description, start, duration, units};\n        axios.post(\"http://localhost:8000/api/schedule\", scheduleItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n            <form className=\"col-sm-8 offset-sm-2 add_activity\" onSubmit={CreateSchedule}>\n                <div className=\"form-group\">\n                    <label>Name your activity:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)} />\n                    {errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"form-group\">\n                    <label>Write a short description:</label>\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)}></textarea>\n                    {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"form-group\">\n                    <label>Start:</label>\n                    <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)}/>\n                    {errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label>Duration:</label>\n                            <input type=\"number\" className=\"form-control\" onChange={e => setDuration(e.target.value)} value={duration}/>\n                            {errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p>: \"\" }\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label>Units:</label>\n                            <select type=\"option\" className=\"form-control\" onChange={e => setUnits(e.target.value)}>\n                                <option>minute(s)</option>\n                                <option>hour(s)</option>\n                                <option>day(s)</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-dark btn-block addbtn\" value=\"Add to Schedule\" />\n            </form>\n        </div>\n    )\n}\n\nexport default ScheduleForm;","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst EditSchedule = props => {\n    const [activity, setActivity] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [start, setStart] = useState(\"\");\n    const [duration, setDuration] = useState(0);\n    const [units, setUnits] = useState(\"minutes\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        // console.log(props._id);\n        axios.get(`http://localhost:8000/api/schedule/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setActivity(res.data.activity);\n                setDescription(res.data.description);\n                // console.log(moment(res.data.start).format('YYYY-MM-DDTHH:mm'));\n                setStart(moment(res.data.start).format('YYYY-MM-DDTHH:mm'));\n                setDuration(res.data.duration);\n                setUnits(res.data.units);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const UpdateSchedule = e => {\n        e.preventDefault();\n        const scheduleItem = {activity, description, start, duration, units};\n        axios.put(`http://localhost:8000/api/schedule/${props._id}`, scheduleItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    const remove = _id => {\n        // console.log(_id);\n        axios.delete(`http://localhost:8000/api/schedule/${props._id}`)\n        .then(res => {\n            console.log(res);\n            navigate(\"/\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n            <form className=\"col-sm-8 offset-sm-2 edit_activity\" onSubmit={UpdateSchedule}>\n                <div className=\"form-group\">\n                    <label>Activity:</label>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)} value={activity}/>\n                    {errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"form-group\">\n                    <label>Description:</label>\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description}></textarea>\n                    {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"form-group\">\n                    <label>Start:</label>\n                    <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)} value={start}/>\n                    {errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p>: \"\" }\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label>Duration:</label>\n                            <input type=\"number\" className=\"form-control\" onChange={e => setDuration(e.target.value)} value={duration}/>\n                            {errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p>: \"\" }\n                        </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label>Units:</label>\n                            <select type=\"option\" className=\"form-control\" onChange={e => setUnits(e.target.value)} value={units}>\n                                <option>minutes</option>\n                                <option>hours</option>\n                                <option>days</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-dark btn-block\" value=\"Update\"/>\n            </form>\n            <div className=\"col-sm-8 offset-sm-2 mt-3\">\n                <button className=\"btn btn-outline-danger btn-block deletebtn\" onClick={remove}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditSchedule;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Router } from '@reach/router';\nimport Display from './Components/Display';\nimport ScheduleForm from './Components/ScheduleForm';\nimport EditSchedule from './Components/EditSchedule';\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n        <h1>ScheduleKeeper</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"navbar\">\n          <Link className=\"navbtn\" to=\"/\">My Schedule</Link>\n          <Link className=\"navbtn\" to=\"/new\">Add Activity</Link>\n        </div>\n        <Router className=\"my-5\">\n          <Display path=\"/\" />\n          <ScheduleForm path=\"/new\" />\n          <EditSchedule path=\"/edit/:_id\" />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}